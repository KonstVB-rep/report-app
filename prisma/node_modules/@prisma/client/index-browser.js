
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  phone: 'phone',
  user_password: 'user_password',
  position: 'position',
  departmentId: 'departmentId',
  role: 'role',
  lastlogin: 'lastlogin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserPermissionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  permissionId: 'permissionId'
};

exports.Prisma.PermissionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  directorId: 'directorId',
  description: 'description'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  dateRequest: 'dateRequest',
  nameDeal: 'nameDeal',
  nameObject: 'nameObject',
  direction: 'direction',
  deliveryType: 'deliveryType',
  contact: 'contact',
  phone: 'phone',
  email: 'email',
  amountCP: 'amountCP',
  amountPurchase: 'amountPurchase',
  amountWork: 'amountWork',
  delta: 'delta',
  comments: 'comments',
  dealStatus: 'dealStatus',
  plannedDateConnection: 'plannedDateConnection',
  resource: 'resource',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RetailScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  dateRequest: 'dateRequest',
  nameDeal: 'nameDeal',
  nameObject: 'nameObject',
  direction: 'direction',
  deliveryType: 'deliveryType',
  contact: 'contact',
  phone: 'phone',
  email: 'email',
  amountCP: 'amountCP',
  delta: 'delta',
  dealStatus: 'dealStatus',
  comments: 'comments',
  plannedDateConnection: 'plannedDateConnection',
  resource: 'resource',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdditionalContactScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  email: 'email',
  position: 'position'
};

exports.Prisma.UserLoginScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  loginAt: 'loginAt'
};

exports.Prisma.DealFileScalarFieldEnum = {
  id: 'id',
  name: 'name',
  localPath: 'localPath',
  storageType: 'storageType',
  userId: 'userId',
  dealId: 'dealId',
  dealType: 'dealType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserFilterScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  filterName: 'filterName',
  filterValue: 'filterValue',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  phone: 'phone',
  user_password: 'user_password',
  position: 'position'
};

exports.Prisma.UserPermissionOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  permissionId: 'permissionId'
};

exports.Prisma.PermissionOrderByRelevanceFieldEnum = {
  id: 'id',
  description: 'description'
};

exports.Prisma.DepartmentOrderByRelevanceFieldEnum = {
  directorId: 'directorId',
  description: 'description'
};

exports.Prisma.ProjectOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  nameDeal: 'nameDeal',
  nameObject: 'nameObject',
  contact: 'contact',
  phone: 'phone',
  email: 'email',
  comments: 'comments',
  resource: 'resource'
};

exports.Prisma.RetailOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  nameDeal: 'nameDeal',
  nameObject: 'nameObject',
  contact: 'contact',
  phone: 'phone',
  email: 'email',
  comments: 'comments',
  resource: 'resource'
};

exports.Prisma.AdditionalContactOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  email: 'email',
  position: 'position'
};

exports.Prisma.UserLoginOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId'
};

exports.Prisma.DealFileOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  localPath: 'localPath',
  userId: 'userId',
  dealId: 'dealId'
};

exports.Prisma.UserFilterOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  filterName: 'filterName',
  filterValue: 'filterValue'
};
exports.Role = exports.$Enums.Role = {
  DIRECTOR: 'DIRECTOR',
  EMPLOYEE: 'EMPLOYEE',
  ADMIN: 'ADMIN'
};

exports.PermissionEnum = exports.$Enums.PermissionEnum = {
  VIEW_USER_REPORT: 'VIEW_USER_REPORT',
  VIEW_UNION_REPORT: 'VIEW_UNION_REPORT',
  DOWNLOAD_REPORTS: 'DOWNLOAD_REPORTS',
  USER_MANAGEMENT: 'USER_MANAGEMENT',
  DEAL_MANAGEMENT: 'DEAL_MANAGEMENT'
};

exports.DepartmentEnum = exports.$Enums.DepartmentEnum = {
  SALES: 'SALES',
  TECHNICAL: 'TECHNICAL'
};

exports.DealType = exports.$Enums.DealType = {
  PROJECT: 'PROJECT',
  RETAIL: 'RETAIL'
};

exports.DirectionProject = exports.$Enums.DirectionProject = {
  PARKING: 'PARKING',
  GLK: 'GLK',
  SKD: 'SKD',
  KATOK: 'KATOK',
  MUSEUM: 'MUSEUM',
  SPORT: 'SPORT',
  FOK_BASIN: 'FOK_BASIN',
  BPS: 'BPS',
  PPS: 'PPS',
  PARK_ATTRACTION: 'PARK_ATTRACTION',
  STADIUM_ARENA: 'STADIUM_ARENA'
};

exports.DeliveryProject = exports.$Enums.DeliveryProject = {
  COMPLEX: 'COMPLEX',
  EQUIPMENT_SUPPLY: 'EQUIPMENT_SUPPLY',
  WORK_SERVICES: 'WORK_SERVICES',
  RENT: 'RENT',
  SOFTWARE_DELIVERY: 'SOFTWARE_DELIVERY',
  OTHER: 'OTHER'
};

exports.StatusProject = exports.$Enums.StatusProject = {
  INVOICE_ISSUED: 'INVOICE_ISSUED',
  ACTUAL: 'ACTUAL',
  REJECT: 'REJECT',
  PAID: 'PAID',
  APPROVAL: 'APPROVAL',
  FIRST_CP_APPROVAL: 'FIRST_CP_APPROVAL',
  CONTRACT_ADVANCE_PAYMENT: 'CONTRACT_ADVANCE_PAYMENT',
  PROGRESS: 'PROGRESS',
  DELIVERY_WORKS: 'DELIVERY_WORKS',
  SIGN_ACTS_PAYMENT: 'SIGN_ACTS_PAYMENT',
  CLOSED: 'CLOSED'
};

exports.DirectionRetail = exports.$Enums.DirectionRetail = {
  PARKING_EQUIPMENT: 'PARKING_EQUIPMENT',
  SCUD: 'SCUD',
  IDS_CONSUMABLES: 'IDS_CONSUMABLES',
  OTHER: 'OTHER'
};

exports.DeliveryRetail = exports.$Enums.DeliveryRetail = {
  EXPENDABLE_MATERIALS: 'EXPENDABLE_MATERIALS',
  SUPPLY: 'SUPPLY',
  WORK: 'WORK'
};

exports.StatusRetail = exports.$Enums.StatusRetail = {
  FIRST_CP_APPROVAL: 'FIRST_CP_APPROVAL',
  APPROVAL: 'APPROVAL',
  ACTUAL: 'ACTUAL',
  REJECT: 'REJECT',
  INVOICE_ISSUED: 'INVOICE_ISSUED',
  PROGRESS: 'PROGRESS',
  PAID: 'PAID',
  CLOSED: 'CLOSED'
};

exports.StorageType = exports.$Enums.StorageType = {
  YANDEX_DISK: 'YANDEX_DISK'
};

exports.Prisma.ModelName = {
  User: 'User',
  UserPermission: 'UserPermission',
  Permission: 'Permission',
  Department: 'Department',
  Project: 'Project',
  Retail: 'Retail',
  AdditionalContact: 'AdditionalContact',
  UserLogin: 'UserLogin',
  DealFile: 'DealFile',
  UserFilter: 'UserFilter'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
